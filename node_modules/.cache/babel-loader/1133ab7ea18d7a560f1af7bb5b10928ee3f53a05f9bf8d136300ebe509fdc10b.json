{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as THREE from 'three';\nconst __default__ = {\n  data() {\n    return {\n      snackbar: false,\n      text: `I am a multi-line snackbar.\\nI can have more than one line. This is another line that is quite long.`\n    };\n  },\n  name: 'ThreeDRoadmap',\n  mounted() {\n    this.initThreeJS();\n  },\n  methods: {\n    openSnackbar() {\n      this.snackbar.show = true; // Open the Snackbar when button is clicked\n    },\n    closeSnackbar() {\n      this.snackbar.show = false; // Close the Snackbar\n    },\n    initThreeJS() {\n      // Basic Scene Setup\n      const scene = new THREE.Scene();\n\n      // Set background color to purple\n      scene.background = new THREE.Color(0x800080);\n      const camera = new THREE.PerspectiveCamera(75, this.$refs.threeContainer.offsetWidth / this.$refs.threeContainer.offsetHeight, 0.1, 1000);\n      const renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(this.$refs.threeContainer.offsetWidth, this.$refs.threeContainer.offsetHeight);\n      this.$refs.threeContainer.appendChild(renderer.domElement);\n\n      // Lighting\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n      scene.add(ambientLight);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n      directionalLight.position.set(10, 10, 10).normalize();\n      scene.add(directionalLight);\n\n      // Create Road\n      const roadShape = new THREE.Shape();\n      roadShape.moveTo(-5, -1);\n      roadShape.lineTo(5, -1);\n      roadShape.lineTo(5, 1);\n      roadShape.lineTo(-5, 1);\n      roadShape.lineTo(-5, -1);\n      const extrudeSettings = {\n        steps: 2,\n        depth: 0.2,\n        bevelEnabled: false\n      };\n      const roadGeometry = new THREE.ExtrudeGeometry(roadShape, extrudeSettings);\n      const roadMaterial = new THREE.MeshLambertMaterial({\n        color: 0x666666\n      });\n      const roadMesh = new THREE.Mesh(roadGeometry, roadMaterial);\n      roadMesh.rotation.x = Math.PI / 2;\n      roadMesh.position.y = 0;\n      scene.add(roadMesh);\n\n      // Create Milestones\n      const milestoneGeometry = new THREE.CylinderGeometry(0.3, 0.3, 0.5, 32);\n      const milestoneMaterial = new THREE.MeshLambertMaterial({\n        color: 0xff0000\n      });\n      const milestones = [];\n      for (let i = 0; i < 4; i++) {\n        const milestoneMesh = new THREE.Mesh(milestoneGeometry, milestoneMaterial);\n        milestoneMesh.position.set(-4 + i * 3, 0.5, 0);\n        scene.add(milestoneMesh);\n        milestones.push(milestoneMesh);\n      }\n\n      // Interactivity: Move camera with mouse\n      const onMouseMove = event => {\n        const mouseX = event.clientX / window.innerWidth * 2 - 1;\n        const mouseY = -(event.clientY / window.innerHeight) * 2 + 1;\n        camera.position.x = mouseX * 2;\n        camera.position.y = mouseY * 2 + 2; // Maintain some height above the road\n        camera.lookAt(scene.position);\n      };\n      window.addEventListener('mousemove', onMouseMove);\n\n      // Camera Position\n      camera.position.z = 7;\n      camera.position.y = 2;\n      camera.lookAt(0, 0, 0);\n\n      // Animation Loop\n      const animate = () => {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n      };\n      animate();\n\n      // Handle resize\n      window.addEventListener('resize', () => {\n        camera.aspect = this.$refs.threeContainer.offsetWidth / this.$refs.threeContainer.offsetHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(this.$refs.threeContainer.offsetWidth, this.$refs.threeContainer.offsetHeight);\n      });\n    }\n  }\n};\nimport { ref } from 'vue';\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props) {\n    const snackbar = ref(false);\n    const text = `I am a multi-line snackbar.\\nI can have more than one line. This is another line that is quite long.`;\n    return {\n      __sfc: true,\n      snackbar,\n      text\n    };\n  }\n});","map":{"version":3,"names":["THREE","__default__","data","snackbar","text","name","mounted","initThreeJS","methods","openSnackbar","show","closeSnackbar","scene","Scene","background","Color","camera","PerspectiveCamera","$refs","threeContainer","offsetWidth","offsetHeight","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","position","set","normalize","roadShape","Shape","moveTo","lineTo","extrudeSettings","steps","depth","bevelEnabled","roadGeometry","ExtrudeGeometry","roadMaterial","MeshLambertMaterial","color","roadMesh","Mesh","rotation","x","Math","PI","y","milestoneGeometry","CylinderGeometry","milestoneMaterial","milestones","i","milestoneMesh","push","onMouseMove","event","mouseX","clientX","window","innerWidth","mouseY","clientY","innerHeight","lookAt","addEventListener","z","animate","requestAnimationFrame","render","aspect","updateProjectionMatrix","ref"],"sources":["RoadMap.vue"],"sourcesContent":["<template>\n  <v-container fluid class=\"container\">\n    <div class=\"text-center\">\n    <v-btn\n      color=\"red-darken-2\"\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      multi-line\n    >\n      {{ text }}\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"red\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\">\n        <div ref=\"threeContainer\" class=\"three-container\"></div>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst snackbar = ref(false)\n\nconst text = `I am a multi-line snackbar.\\nI can have more than one line. This is another line that is quite long.`\n</script>\n\n<script>\nimport * as THREE from 'three';\n\nexport default {\n  data() {\n    return {\n      snackbar: false,\n      text: `I am a multi-line snackbar.\\nI can have more than one line. This is another line that is quite long.`,\n    }\n  },\n  name: 'ThreeDRoadmap',\n  mounted() {\n    this.initThreeJS();\n  },\n  methods: {\n    openSnackbar() {\n      this.snackbar.show = true; // Open the Snackbar when button is clicked\n    },\n    closeSnackbar() {\n      this.snackbar.show = false; // Close the Snackbar\n    },\n    initThreeJS() {\n      // Basic Scene Setup\n      const scene = new THREE.Scene();\n\n      // Set background color to purple\n      scene.background = new THREE.Color(0x800080);\n\n      const camera = new THREE.PerspectiveCamera(\n        75,\n        this.$refs.threeContainer.offsetWidth / this.$refs.threeContainer.offsetHeight,\n        0.1,\n        1000\n      );\n      const renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setSize(this.$refs.threeContainer.offsetWidth, this.$refs.threeContainer.offsetHeight);\n      this.$refs.threeContainer.appendChild(renderer.domElement);\n\n      // Lighting\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n      scene.add(ambientLight);\n\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n      directionalLight.position.set(10, 10, 10).normalize();\n      scene.add(directionalLight);\n\n      // Create Road\n      const roadShape = new THREE.Shape();\n      roadShape.moveTo(-5, -1);\n      roadShape.lineTo(5, -1);\n      roadShape.lineTo(5, 1);\n      roadShape.lineTo(-5, 1);\n      roadShape.lineTo(-5, -1);\n\n      const extrudeSettings = {\n        steps: 2,\n        depth: 0.2,\n        bevelEnabled: false,\n      };\n\n      const roadGeometry = new THREE.ExtrudeGeometry(roadShape, extrudeSettings);\n      const roadMaterial = new THREE.MeshLambertMaterial({ color: 0x666666 });\n      const roadMesh = new THREE.Mesh(roadGeometry, roadMaterial);\n      roadMesh.rotation.x = Math.PI / 2;\n      roadMesh.position.y = 0;\n      scene.add(roadMesh);\n\n      // Create Milestones\n      const milestoneGeometry = new THREE.CylinderGeometry(0.3, 0.3, 0.5, 32);\n      const milestoneMaterial = new THREE.MeshLambertMaterial({ color: 0xff0000 });\n\n      const milestones = [];\n      for (let i = 0; i < 4; i++) {\n        const milestoneMesh = new THREE.Mesh(milestoneGeometry, milestoneMaterial);\n        milestoneMesh.position.set(-4 + i * 3, 0.5, 0);\n        scene.add(milestoneMesh);\n        milestones.push(milestoneMesh);\n      }\n\n      // Interactivity: Move camera with mouse\n      const onMouseMove = (event) => {\n        const mouseX = (event.clientX / window.innerWidth) * 2 - 1;\n        const mouseY = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        camera.position.x = mouseX * 2;\n        camera.position.y = mouseY * 2 + 2; // Maintain some height above the road\n        camera.lookAt(scene.position);\n      };\n\n      window.addEventListener('mousemove', onMouseMove);\n\n      // Camera Position\n      camera.position.z = 7;\n      camera.position.y = 2;\n      camera.lookAt(0, 0, 0);\n\n      // Animation Loop\n      const animate = () => {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n      };\n\n      animate();\n\n      // Handle resize\n      window.addEventListener('resize', () => {\n        camera.aspect = this.$refs.threeContainer.offsetWidth / this.$refs.threeContainer.offsetHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(this.$refs.threeContainer.offsetWidth, this.$refs.threeContainer.offsetHeight);\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  background-color: #800080; /* Adjust the container's background to match the scene */\n}\n</style>\n\n<style>\n.three-container {\n  width: 100%;\n  height: 500px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}